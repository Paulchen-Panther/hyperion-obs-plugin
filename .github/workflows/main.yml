name: hyperion-obs
on: [push, pull_request]

env:
  PLUGIN_NAME: 'hyperion-obs'

jobs:
  linux:
    name: 'Ubuntu x86_64-bit'
    runs-on: ubuntu-latest
    env:
      MINIMUM_OBS_VERSION: 28.0.1
      PROJECT_GIT: 'https://github.com/paulchen-panther/hyperion-obs-plugin'
      MAINTAINER: 'self@github.com'

    steps:
      - name: 'Checkout hyperion-obs'
        uses: actions/checkout@v2
        with:
          path: ${{ github.workspace }}
          submodules: 'true'

      - name: 'Generate environment variables from .version'
        shell: bash
        run: echo "VERSION=$(tr -d '\n' < .version)" >> $GITHUB_ENV

      - name: 'Install Dependencies'
        shell: bash
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y \
            obs-studio \
            git \
            cmake \
            qtbase5-dev
          sudo apt-get install -y libobs-dev

      - name: 'Build hyperion-obs'
        shell: bash
        run: |
          cmake \
            -S ${{ github.workspace }} \
            -B ${{ github.workspace }}/build \
            -G "Unix Makefiles" \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DGLOBAL_INSTALLATION=ON
          sudo cmake --build ${{ github.workspace }}/build/ --parallel 4 --target install

          cd ${{github.workspace}}/build
          PAGER="cat" sudo checkinstall -y --type=debian --fstrans=no --nodoc \
            --backup=no --deldoc=yes --install=no \
            --pkgname=${{ env.PLUGIN_NAME }} --pkgversion=${{ env.VERSION }} \
            --exclude="/usr/include/flatbuffers,/usr/bin,/usr/lib/x86_64-linux-gnu/cmake,/usr/lib/x86_64-linux-gnu/pkgconfig" \
            --pkglicense="MIT" --maintainer="${{ env.MAINTAINER }}" \
            --pkggroup="video" \
            --pkgsource="${{ env.PROJECT_GIT }}" \
            --requires="obs-studio \(\>= ${{ env.MINIMUM_OBS_VERSION }}\)" \
            --pakdir="${{ github.workspace }}/plugin"
          sudo mv ${{ github.workspace }}/plugin/*.deb ${{ github.workspace }}/plugin/${{ env.PLUGIN_NAME }}.${{ env.VERSION }}.linux.x64.deb

      - name: 'Upload hyperion-obs'
        if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'pull_request'
        uses: actions/upload-artifact@v2
        with:
          name: '${{ env.PLUGIN_NAME }}.${{ env.VERSION }}.linux.x64'
          path: ${{ github.workspace }}/plugin/*.deb

  github_publish:
    name: 'Publish GitHub Releases'
    if: startsWith(github.event.ref, 'refs/tags')
    needs: [linux]
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout hyperion-obs'
        uses: actions/checkout@v2

      - name: Generate environment variables from .version
        shell: bash
        run: echo "VERSION=$(tr -d '\n' < .version)" >> $GITHUB_ENV

      # Download artifacts from previous build process
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      # Create draft release and upload artifacts
      - name: Create draft release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.PLUGIN_NAME }} ${{ env.VERSION }}
          tag_name: ${{ env.TAG }}
          files: "artifacts/**"
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
